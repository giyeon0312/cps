CC "CoreUI" MODEL_SELECT_BOX #읽어들일 모델들을 선택
oktext:"Ok" boxtext:"Please select the execution model:"
multi-sel title:"Execution model select box"  # without 2nd "_", hehe...
modeltype:"Automobile"
extra:{

}

IF (endbutton = "ok") #ok 버튼을 누르면 모델을 로드함
{
	FOR modelid in:(modelids)
	{
		CC "Core" LOAD_MODEL modelid:(VAL modelid)
	}
}

#json 데이터 포맷
#	state: state의 개수
#	state_type
#	그리고 타입에 맞는 attr을 state_attr 나열...

SET ip:("http://192.168.43.123:10000") #서버의 ip주소와 포트를 넣은 변수

FOR modelid in:(modelids) #모든 모델을 읽어들일 때까지 반복함
{
	
	SETL nModelID:(VAL modelid) #Model id를 nModelID 변수에 저장
	CC "Core" GET_MODEL_BASENAME modelid:(nModelID) #모델의 이름을 불러옴
	SET state:(1)
	CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(nModelID) classname:("Start") # 클래스 이름에 해당하는 objid를 불러옴
	SET nObjId:(VAL objids)
	CC "Core" GET_ATTR_VAL objid:(nObjId) attrname:("IP") 
	#start node의 "IP"란 속성에 동작시킬 아두이노에 대한 정보가 저장되어 있음
	#"IP"속성의 값을 불러들여 중계용 서버에 전송하기 위해 함수를 호출한 것임
	SETL basename:(val) #모델의 이름을 저장
	
	SET t:(0)
	SETL json:("@{") #json 형식으로 만들기 위해 변수 생성, 앞의 @는 아두이노 상에서 파싱처리를 위해 임의로 넣은 토큰임
	WHILE (1) #모델 안에 있는 모든 객체의 정보를 읽어들인 후 종료됨 
	{
		SETL sState:(STR state) #상태 번호 저장
	#	CC "AdoScript" INFOBOX ()
		CC "Core" GET_ATTR_VAL objid:(nObjId) attrname:("Next") #다음 객체 번호가 저장된 속성 값 불러오기
		SET nObjId:(VAL val) # 다음 객체 번호 저장
		CC "Core" GET_CLASS_ID objid:(nObjId) #객체 번호의 classid 불러오기
		CC "Core" GET_CLASS_NAME classid:(classid) #classid를 기반으로 class이름 불러오기
		SETL sClassName:(classname) #class 이름 저장, class 이름에 따라 아래의 분기가 실행됨
		IF (sClassName = "End") #종료 클래스일 경우
		{
			SET state:(state-1)
			SETL sState:(STR state)
		#	CC "AdoScript" INFOBOX ("The end of Class")
			BREAK
		}
		ELSIF (sClassName = "Motor") #모터일 경우 (기계팔(서보모터)에서 쓰임, 자동차 코드에선 아직 미구현된 기능임)
		{
			CC "Core" GET_ATTR_VAL objid:(nObjId) attrname:("Motor_Number")
			SETL m:(val)
			CC "Core" GET_ATTR_VAL objid:(nObjId) attrname:("Degree")
			SETL degree:(STR val)
			SETL type:("arm")
			
							SETL json:(json+ "\""+sState + "_" + "t\""+":\"" + type + "\","
				+  "\""+sState + "_" + "m\""+":\"" + m + "\","
				+  "\""+sState + "_" + "d\""+":\"" + degree + "\",")
		}
		SET state:(state+1)
		
		
		
		IF (t=50)
		{
			CC "AdoScript" INFOBOX ("t is "+STR t)
			BREAK
		}
		SET t:(t+1)
	}
	
	SETL tempmap:({"Content-Type": "text/plain"}) #http request를 보내기 위한 초기 설정
	SETL json:(json+""+ "\"state\":\"" +  sState + "\"}") #json 변수 저장
	HTTP_SEND_REQUEST (ip+"?id=adoxx&name="+basename) str_method:("GET") map_reqheaders:(tempmap) str_reqbody:(json) val_respcode:respstat map_respheaders:respheaders str_respbody:respbody
	SLEEP ms:(500) # 서버에서 데이터를 완전히 받을 때까지 대기

	

}
CC "AdoScript" INFOBOX ("The end of AdoScript")



PROCEDURE SLEEP ms:integer
{
	SETL time:(800*ms)
	FOR i from:1 to:(time) {}
}